#!/usr/bin/env ruby
require 'fileutils'
require 'dotenv/load'
require 'mysql2'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to setup or update your development environment automatically.
  # This script is idempotent, so that you can run it at anytime and get an expectable outcome.
  # Add necessary setup steps to this file.

  abort(".env is needed") unless File.exist?(".env")

  puts '== Up docker containers =='
  system! 'docker-compose up -d'
  10.times {|i|
    begin
      Mysql2::Client.new(host: "127.0.0.1", port: ENV["DB_PORT"], username: "root", password: ENV["DB_ROOT_PASSWORD"])
      break
    rescue
      abort("DB port is not up") if i > 8
      puts '...up for waiting'
      sleep(1)
    end
  }

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  puts "\n== Preparing database =="
  system! 'bin/rails db:create'
  system! 'bin/rails db:migrate'
  system! 'bin/rails db:seed'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'

  puts "\n== Setup is completed =="
  puts "If you want to start application server, execute `bin/rails s`"
  puts "If you want to start frontend dev server, execute `cd frontend && yarn serve`"
  puts "If you want to start job server, execute `bundle exec sidekiq`"
end
